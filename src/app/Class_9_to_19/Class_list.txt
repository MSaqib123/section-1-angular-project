9. Managing & Creating Components with the Angular CLI
    1. adding  Folder base  Component 
    2. added user component

10. Styling & Using Our Next Custom Component
    1. styling user componentn

11. Preparing User Data (To Output Dynamic Content)
    1. adding dummy user file.ts
    2. adding asset folder 


12. Storing Data in a Component Class
    1. using  dummy_user data in     user component with random index

13. Outputting Dynamic Content with String Interpolation
    // add String Interpolation  for view name


14. Property Binding & Outputting Computed Values
    //"Property Binding" - a key Angular feature that allows you to bind element properties to dynamic values.
    // add Property binding  we used on    tags    when the data  can be change dynamically 
    // exept string (string can handle by  string Interpolation)
    // add the   asset path  to anguler.json   "src/assets"
    //"assets": [
              "src/favicon.ico",
              "src/assets",
              {
                "glob": "**/*",
                "input": "public"
              }
            ],

16.  Combining the  image folder path with image using   get method inside the componet.ts file


17. Listening to Events with Event Binding
    adding click event on button
    // click is  event listener

18. Managing State & Changing Data
    2. Mangeing the state    and changing the data


19. A Look Behind The Scenes Of Angular's Change Detection Mechanism
    //======== zone.js ==========
    /*
      1. What is zone.jss? 
      zone.js is a library that Angular uses to detect and track asynchronous operations like:
      setTimeout
      Promise
      addEventListener
      XHR / fetch calls

      NOTE
      Angular uses zone.js to automatically trigger change detection and update the UI.

      Example:
      When click is called the   zone.js tell to  anguler this is click event and do some changing 

      NOTE
      1. Does zone.js Update the UI Itself? ‚ùå
          No!
          zone.js never updates the UI directly.
          Its only job is to notify Angular whenever an asynchronous task or event happens.

          After that, Angular itself runs change detection and updates the UI.
      */
    
